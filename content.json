{"meta":{"title":"RtypeF_Blog","subtitle":"","description":"","author":"RtypeF","url":"http://type-f.github.io","root":"/"},"pages":[],"posts":[{"title":"Mybatis+SpringBoot后端配置小记","slug":"2022061601","date":"2022-06-16T14:07:57.000Z","updated":"2022-06-16T15:07:47.809Z","comments":true,"path":"2022/06/16/2022061601/","link":"","permalink":"http://type-f.github.io/2022/06/16/2022061601/","excerpt":"","text":"1 项目建立尽量使用默认的 start.spring.io，也可以使用 start.aliyun.io，但官方的源要更加好用，如一些snippets和version官方更加全面。 在依赖引入时至少要加入Mybatis framework和web spring的依赖，然后在项目建立后根据使用的数据库到MAVEN官方依赖站复制依赖引入索引段，此处使用的是mysql，基于JDBC连接，故搜索 mysql-connector寻找mysql连接器，使用MySQL Connector&#x2F;J(根据使用语言为java选择)，根据mysql版本选择较为合适的依赖版本，这里使用较为推荐的8.0.13版本。 依赖引入索引如下： 123456&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;&lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;8.0.13&lt;/version&gt;&lt;/dependency&gt; 2 基本配置此时需要对于各种设置进行配置。 首先是对于maven的设置。file→settings→maven，设置maven地址，本地仓库和设置文件。 然后是应用设置的更改，位于main→resources→application.prefer，首先更改文件类型为yml格式，方便进行进一步更改，然后对于server端口，spring和mybatis进行设置。 1234567891011121314151617181920server: port:8080spring: datasource: url: &#x27;jdbc:mysql://localhost:3306/test?serverTimezone=UTC&#x27; password: &#x27;gggundam&#x27; username: &#x27;root&#x27; driver-class-name: com.mysql.cj.jdbc.Driver profiles: active: dafaultmybatis: mapper-locations: classpath:mapper/*.xml type-aliases-package: com.saltfish.library.pojo configuration: map-underscore-to-camel-case: truelogging: level: com.saltfish.library.mapper: trace org.springframework.boot.autoconfigure: ERROR url: &#39;jdbc:mysql://localhost:3306/test?serverTimezone=UTC&#39;为对jdbc连接url的设置，3306为服务端口号，test为数据库名。serverTimezone为时区设置，不加时区的话会报时区不一致的错误。 password注意可能会有大小写问题，这里可能会出现设置密码时输入的大写但实际的密码为小写。 mapper-locations: classpath:mapper/*.xml为对于mapper默认路径的设置，mybatis会按照此设置寻找mapper type-aliases-package: com.saltfish.library.pojo为设置方法层路径。 com.saltfish.library.mapper: trace设置会在控制台输出的部分。 3 包和文件夹java文件夹下为动态文件，resources下为静态文件。 java和resources下都需要建立mapper文件夹，放置mapper文件。java下的mapper中放置接口文件，resources下的mapper中为xml文件，对应的文件的文件名应当一致。 java下的mapper中初始化方法，pojo中实现方法，resources下的mapper中书写sql语句。 pojo中的文件可用数据库的表文件反向生成。数据库的连接方法为最右侧database→加号→datasource。","categories":[],"tags":[]},{"title":"error：spawn failed错误的解决方法","slug":"2022052102","date":"2022-05-21T14:12:46.000Z","updated":"2022-06-16T15:00:34.469Z","comments":true,"path":"2022/05/21/2022052102/","link":"","permalink":"http://type-f.github.io/2022/05/21/2022052102/","excerpt":"","text":"问题描述先是出现错误： 1error：spawn failed... 然后经过一些博客的操作会出现以下问题： 1fatal: cannot lock ref &#x27;HEAD&#x27;: unable to resolve reference HEAD: Invalid argument error: src refspec 或者： 1error: src refspec HEAD does not match any. 总结一下：问题大多是因为git进行push或者hexo d的时候改变了一些.deploy_git文件下的内容。 解决办法：删除.deploy_git文件夹;输入git config --global core.autocrlf false然后，依次执行： 123hexo cleanhexo ghexo d 转载自原出处在这里","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://type-f.github.io/tags/hexo/"}]},{"title":"第一篇博客","slug":"2022052101","date":"2022-05-21T14:12:24.000Z","updated":"2022-05-21T14:52:14.472Z","comments":true,"path":"2022/05/21/2022052101/","link":"","permalink":"http://type-f.github.io/2022/05/21/2022052101/","excerpt":"","text":"这是个人博客上的第一篇博客。会在这里记录一些容易踩的坑，一些心情，一些收获。起源是这次系统的损坏。数据一类的损失是巨大的，以前写过的代码现在只能想办法恢复了，以后还是在网络上留一份比较好。 这篇先记录下markdown语法，做一个备忘。 标题在标题前面添加#和一个空格以创建标题#的数量表示标题的级数例如 # 一级标题 ## 二级标题 段落用空白行分割例如 第一段 第二段 换行在一行的末尾添加两个或多个空格，然后按回车键,即可创建一个换行例如第一行第二行 第一行 （两个空格） 第二行 强调粗体要加粗文本，请在单词或短语的前后各添加两个星号例如加粗 **加粗** 斜体要用斜体显示文本，请在单词或短语前后添加一个星号例如斜体 *斜体* 加粗斜体要同时用粗体和斜体突出显示文本，请在单词或短语的前后各添加三个星号例如加粗斜体 ***加粗斜体*** 引用要创建块引用，请在段落前添加一个 &gt; 符号。例如 引用 &gt;引用 多段引用要在空白行添加 &gt; 符号例如 引用 引用 &gt;引用 &gt; &gt;引用 嵌套引用在段前加入更多 &gt;引用也可以包含其他md元素","categories":[],"tags":[{"name":"markdown","slug":"markdown","permalink":"http://type-f.github.io/tags/markdown/"}]}],"categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://type-f.github.io/tags/hexo/"},{"name":"markdown","slug":"markdown","permalink":"http://type-f.github.io/tags/markdown/"}]}